@page
@model Web.Pages.Data.SearchApiFromCodeBehindPageModel

@{
    ViewData["Title"] = "Search Api From Code Behind";
}

<div id="app">
    <div class="col-12 mb-3">
        <v-toolbar >
            <v-toolbar-title>
                <b>{{ titleMsg }}</b>
            </v-toolbar-title>
            <v-toolbar-items>
                <v-btn v-on:click="copyVueJsCode">Copy VueJS code</v-btn>
                <v-spacer></v-spacer>
                <v-btn v-on:click="copyCsharpCode">Copy C# code</v-btn>
            </v-toolbar-items>
        </v-toolbar>
    </div>
    <div class="form-floating mb-3">
        <input type="search" class="form-control" id="tbQuery"
               tabindex="0"
               autofocus v-on:keyup.enter="callSearchAPI" v-model="query" placeholder="I want to search with this terms">
        <label for="tbQuery">Enter search term search the data from code behind</label>
    </div>
    <div class="row row-cols-1 row-cols-md-2 g-4" v-if="searchResults.length">
        <div class="col" v-for="currentSearchTerm in searchResults" :key="currentSearchTerm.id">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">{{ currentSearchTerm.title }}</h5>
                    <p class="card-text">{{ currentSearchTerm.description }}</p>
                    <p class="card-text">
                        <small class="text-body-secondary">
                            Generated at: {{ currentSearchTerm.generatedAt }}
                        </small>
                    </p>
                </div>
                <div class="card-footer text-body-secondary">
                    Go to <a :href="currentSearchTerm.url" class="card-link">the page</a>
                </div>
            </div>
        </div>
    </div>
    <div class="text-info" v-else>
        <div v-if="isLoading">
            Loading data from the server...
        </div>
        <div v-else>
            No data has been retrieved.
        </div>
    </div>
</div>

@section Scripts
{
    @await Html.PartialAsync("_VueJs")
    @await Html.PartialAsync("_Vuetify")
    <script>
        const { createApp, ref } = Vue
        const { createVuetify } = Vuetify
        const vuetify = createVuetify();
        const query = ref('');
        const titleMsg = ref('Operations');
        let isLoading = ref(false);
        let searchResults = ref([]);
        const app = createApp({
        setup() {        
          return {
            query,
            titleMsg,
            callSearchAPI, 
            copyVueJsCode, 
            copyCsharpCode,
            searchResults,
            isLoading
          }
        }
      });    
      
      app.use(vuetify).mount('#app');

      function copyVueJsCode() {
            console.log("copying code");
            navigator.clipboard.writeText(`function callSearchAPI(e) {
        console.log('searching with ' + query);
        const value = e.target.value.trim()        
        if (value) {            
          isLoading.value = true;
          let searchUrl = '/SearchUrl' + "&query=" + value;
          console.log("Search url is " + searchUrl);  
          fetch(searchUrl)
            .then(response => response.json())
            .then(data => {
              console.log(data);
              searchResults.value = data;
            });
          isLoading.value = false;
        }
        else {
          searchResults.value = [];
        }
      }           ;`);
            titleMsg.value = "VueJS code copied to clipboard";
        }
        
        function copyCsharpCode() {
            console.log("copying C# code");
            navigator.clipboard.writeText(` public async Task<IActionResult> OnGetSearchAsync(string query)
            {
                logger.LogInformation("Calling search API with query {Query}", query);
                var data = await generalHttpService.SearchAsync(query);
                logger.LogInformation("Search API returned {Count} results", data.Length);
                return new JsonResult(data);
            });`);
            titleMsg.value = "C# code copied to clipboard";
        }
        
      function callSearchAPI(e) {
        console.log('searching with ' + query);
        const value = e.target.value.trim()        
        if (value) {            
          isLoading.value = true;
          let searchUrl = '@Url.Page("SearchApiFromCodeBehind","Search")' + "&query=" + value;
          console.log("Search url is " + searchUrl);  
          fetch(searchUrl)
            .then(response => response.json())
            .then(data => {
              console.log(data);
              searchResults.value = data;
            });
          isLoading.value = false;
        }
        else {
          searchResults.value = [];
        }
      }           
    </script>
}

@section Header
{
    @await Html.PartialAsync("_VuetifyStyles")
}